trigger: none

resources:
  pipelines:
    - pipeline: oauthapp-build-pipeline  # Reference the correct pipeline
      source: \oauth\oauthapp-build-pipeline    # Ensure the source is correct
      project: 'kube9t.com'
      trigger: true

pool:
  vmImage: 'ubuntu-latest'

variables:
  webAppName: 'oauthv2app'
  resourceGroupName: 'oauth-rg'
  artifactName: 'oauthapp'   # Match the artifact name from the build pipeline
  artifactPath: '$(Pipeline.Workspace)/$(artifactName)/$(artifactName).zip'  # Correct artifact path

stages:
- stage: Deploy
  jobs:
  - job: DeployToAzure
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'specific'
        project: 'kube9t.com'
        pipeline: 'oauthapp-build-pipeline'   # Correct pipeline reference
        runVersion: 'latest'   # Always download the latest successful run
        artifact: 'oauthapp'   # The artifact name published in the build pipeline
        targetPath: '$(Pipeline.Workspace)/$(artifactName)'   # The location where the artifact will be downloaded
      displayName: 'Download build artifact'

    - task: AzureAppServiceSettings@1
      inputs:
        azureSubscription: 'azuredevops-fic'   # Replace with your Azure connection name
        appName: '$(webAppName)'   # Azure Web App name
        appSettings: |
          [
            {"name": "PORT", "value": "$(OAUTHAPP_PORT)"},
            {"name": "NODE_ENV", "value": "$(OAUTHAPP_ENVIRONMENT)"},
            {"name": "SESSION_SECRET", "value": "$(OAUTHAPP_SESSION_SECRET)"},
            {"name": "REDIRECT_URI", "value": "$(OAUTHAPP_REDIRECT_URI)"},
            {"name": "API_KEY", "value": "$(OAUTHAPP_OAUTHAPI_KEY)"},
            {"name": "API_URI", "value": "$(OAUTHAPP_OAUTHAPI_URL)"},
            {"name": "GEN_API_URI", "value": "$(OAUTHAPP_GENAI_URI)"},
            {"name": "MANAGED_IDENTITY_CLIENT_ID", "value": "$(OAUTHAPP_MANAGED_IDENTITY_CLIENT_ID)"},
            {"name": "AZURE_TENANT_ID", "value": "$(OAUTHAPP_AZURE_TENANT_ID)"},
            {"name": "AZURE_CLIENT_ID", "value": "$(OAUTHAPP_AZURE_CLIENT_ID)"},
            {"name": "AZURE_API_CLIENT_ID", "value": "$(OAUTHAPP_OAUTHAPI_AZURE_CLIENT_ID)"},
            {"name": "APPINSIGHTS_CONNECTION_STRING", "value": "$(OAUTHAPP_APPINSIGHTS_CONNECTION_STRING)"},
            {"name": "KEY_VAULT_NAME", "value": "$(OAUTHAPP_KEY_VAULT_NAME)"}
          ]
      displayName: 'Add environment variables to web app'

    - task: AzureWebApp@1
      inputs:
        azureSubscription: 'azuredevops-fic'   # Replace with your Azure connection name
        appName: '$(webAppName)'   # Azure Web App name
        package: '$(artifactPath)'   # Path to the downloaded artifact
        appType: 'webApp'   # Specify that we are deploying a web app
      displayName: 'Deploy web app to Azure'

    - script: |
        # Test site health using curl
        http_code=$(curl -s -o /dev/null -w "%{http_code}" https://$(webAppName).azurewebsites.net)
        if [ "$http_code" -ne 200 ]; then
          echo "Site is not healthy (HTTP code: $http_code)"
          exit 1
        else
          echo "Site is healthy (HTTP code: $http_code)"
        fi
      displayName: 'Check site health'
