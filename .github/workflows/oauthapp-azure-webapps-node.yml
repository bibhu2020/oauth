# This workflow will build and push a node.js application to an Azure Web App when a commit is pushed to your default branch.
#
# This workflow assumes you have already created the target Azure App Service web app.
# For instructions see https://docs.microsoft.com/en-us/azure/app-service/quickstart-nodejs?tabs=linux&pivots=development-environment-cli
#
# To configure this workflow:
#
# 1. Download the Publish Profile for your Azure Web App. You can download this file from the Overview page of your Web App in the Azure Portal.
#    For more information: https://docs.microsoft.com/en-us/azure/app-service/deploy-github-actions?tabs=applevel#generate-deployment-credentials
#
# 2. Change the value for the AZURE_WEBAPP_NAME. Optionally, change the AZURE_WEBAPP_PACKAGE_PATH and NODE_VERSION environment variables below.
#
# For more information on GitHub Actions for Azure: https://github.com/Azure/Actions
# For more information on the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# For more samples to get started with GitHub Action workflows to deploy to Azure: https://github.com/Azure/actions-workflow-samples
name: "Deploy Oauth App"
on:
  # push:
  #   branches: [ "main" ]
  #   paths:
  #     - 'oauthapp/**'  # Trigger only when files inside oauthapp/ change
  workflow_dispatch:

env:
  CODE_PATH: 'oauthapp'                  # set this to the path to your web app project, defaults to the repository root
  AZURE_WEBAPP_NAME: oauthv2app    # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: '.'      # set this to the path to your web app project, defaults to the repository root
  NODE_VERSION: '20.x'                # set this to the node version to use

permissions:
  contents: read
  id-token: write  # âœ… Required for OIDC login

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        # cache: 'npm'

    - name: npm install, build, and test
      working-directory: ${{ env.CODE_PATH }}
      run: |
        npm install
        npm run build --if-present
        npm run test --if-present

    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v4
      with:
        name: node-app
        path: .

  deploy:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v4
      with:
        name: node-app

    - name: Load shared environment variables
      run: |
        set -a
        source .github/env/shared.env
        set +a

    - name: Print selected environment variables
      run: |
        echo "AZURE_WEBAPP_NAME=${{ env.AZURE_WEBAPP_NAME }}"
        echo "RESOURCE_GROUP_NAME=${{ env.RESOURCE_GROUP_NAME }}"
        echo "AZURE_SUBSCRIPTION_ID=${{ env.AZURE_SUBSCRIPTION_ID }}"
        
    - name: Upgrade Azure CLI (optional but recommended)
      run: |
        az upgrade --yes

    - name: Azure Login (OIDC)
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Set App Service application settings
      run: |
        az upgrade --yes
        az webapp config appsettings set \
          --name ${{ env.AZURE_WEBAPP_NAME }} \
          --resource-group ${{ env.RESOURCE_GROUP_NAME }} \
          --settings \
            PORT=${{ env.PORT }} \
            NODE_ENV=${{ env.NODE_ENV }} \
            SESSION_SECRET=${{ env.OAUTHAPP_SESSION_SECRET }} \
            REDIRECT_URI=${{ env.OAUTHAPP_REDIRECT_URI }} \
            API_KEY=${{ env.OAUTHAPI_KEY }} \
            API_URI=${{ env.OAUTHAPI_URI }} \
            GEN_API_URI=${{ env.OAUTHGENAPI_URI }} \
            MANAGED_IDENTITY_CLIENT_ID=${{ env.OAUTHAPP_MANAGED_IDENTITY_CLIENT_ID }} \
            AZURE_TENANT_ID=${{ env.AZURE_TENANT_ID }} \
            AZURE_CLIENT_ID=${{ env.OAUTHAPP_AZURE_CLIENT_ID }} \
            AZURE_API_CLIENT_ID=${{ env.OAUTHAPI_AZURE_CLIENT_ID }} \
            APPINSIGHTS_CONNECTION_STRING=${{ env.OAUTHAPP_APPINSIGHTS_CONNECTION_STRING }} \
            KEY_VAULT_NAME=${{ env.OAUTHAPI_KEY_VAULT_NAME }} \
          --api-version 2023-07-01

    - name: 'Deploy to Azure WebApp'
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
